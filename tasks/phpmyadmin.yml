---
- name: "Write phpmyadmin_version variable to {{ phpmyadmin_version_file }}"
  template:
    src: templates/VERSION.j2
    dest: "{{ phpmyadmin_version_file }}"
    owner: "{{ phpmyadmin_user }}"
    group: "{{ phpmyadmin_user }}"
    mode: 0644
  register: phpmyadmin_version_file
  tags:
    - phpmyadmin

# https://docs.phpmyadmin.net/en/latest/setup.html#installing-from-git
- name: phpMyAdmin repo present
  git:
    repo: https://github.com/phpmyadmin/phpmyadmin.git
    dest: "{{ phpmyadmin_html }}"
    version: "{{ phpmyadmin_version }}"
    depth: 1
    clone: true
    update: true
    force: true
    verify_commit: "{{ phpmyadmin_verify_commit }}"
  tags:
    - phpmyadmin

- name: Chown the files
  file:
    path: "{{ phpmyadmin_html }}"
    recurse: true
    owner: "{{ phpmyadmin_user }}"
    group: "{{ phpmyadmin_user }}"
  tags:
    - phpmyadmin

- name: Debug
  block:

    - name: Debug the HTTP Authentication username if provided
      debug:
        msg:
          - "HTTP Authentication username: {{ phpmyadmin_htauth_user }}"
        verbosity: 1
      tags:
        - phpmyadmin

  when: ( phpmyadmin_htauth_user is defined ) and ( phpmyadmin_htauth_user != "" )

- name: Debug
  block:

    - name: Debug the HTTP Authentication password if provided
      debug:
        msg:
          - "HTTP Authentication password: {{ phpmyadmin_htauth_pass }}"
        verbosity: 1
      tags:
        - phpmyadmin

  when: ( phpmyadmin_htauth_pass is defined ) and ( phpmyadmin_htauth_pass != "" )

- name: Check if Composer needs to be run
  shell: lynx {% if phpmyadmin_htauth_user is defined and phpmyadmin_htauth_user|length %}-auth={{ phpmyadmin_htauth_user }}:{{ phpmyadmin_htauth_pass }} {% endif %}-useragent "Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0" -dump "{{ phpmyadmin_url }}" 2>/dev/null | grep -q "Most likely you did not run Composer" && echo "TRUE" || echo "FALSE"
  check_mode: false
  changed_when: '"TRUE" in phpmyadmin_composer_run.stdout'
  register: phpmyadmin_composer_run
  when: ( phpmyadmin_url is defined ) and ( phpmyadmin_url != "" )
  tags:
    - phpmyadmin

- name: When phpmyadmin_version_file has changed
  block:

    - name: composer update for phpMyAdmin
      command: composer update --no-dev
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      tags:
        - phpmyadmin

    - name: composer packages for two factor authentication present
      command: composer require pragmarx/google2fa-qrcode
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      when: '"RELEASE_5" in phpmyadmin_version'
      tags:
        - phpmyadmin

    - name: yarn install for phpMyAdmin
      command: yarn install
      register: phpmyadmin_yarn_install
      changed_when: '"Already up-to-date." not in phpmyadmin_yarn_install.stdout'
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      tags:
        - phpmyadmin

  when: ( phpmyadmin_version_file is changed ) or ( phpmyadmin_composer_run is defined and phpmyadmin_composer_run.stdout == "TRUE" )

- name: .htaccess in place
  copy:
    src: files/htaccess.root
    dest: "{{ phpmyadmin_html }}/.htaccess"
  tags:
    - phpmyadmin

# https://docs.phpmyadmin.net/en/latest/config.html#web-dirs
- name: Get a list of sub-directories
  shell: find . -maxdepth 1 -type d | grep -v ^\.$ | sed 's/\.\///' | grep -v ^js$ | grep -v ^themes$ | grep -v ^vendor$
  args:
    chdir: "{{ phpmyadmin_html }}"
  become: true
  become_user: "{{ phpmyadmin_user }}"
  check_mode: false
  changed_when: false
  register: phpmyadmin_subdirs
  tags:
    - phpmyadmin

- name: .htaccess files in place to deny direct access to sub-directories
  copy:
    src: files/htaccess.deny
    dest: "{{ phpmyadmin_html }}/{{ dir }}/.htaccess"
  loop: "{{ phpmyadmin_subdirs.stdout_lines }}"
  loop_control:
    loop_var: dir
  tags:
    - phpmyadmin

- name: Generate blowfish secret for cookies
  shell: "pwgen -sn 32 1 > {{ phpmyadmin_blowfish_file }} && chmod 400 {{ phpmyadmin_blowfish_file }}"
  args:
    creates: "{{ phpmyadmin_blowfish_file }}"
  become: true
  become_user: "{{ phpmyadmin_user }}"
  check_mode: false
  tags:
    - phpmyadmin

- name: Set a variable for the base64 encoded .blowfish.secret value
  slurp:
    src: "{{ phpmyadmin_blowfish_file }}"
  register: phpmyadmin_blowfish_b64encoded
  tags:
    - phpmyadmin

- name: Set a fact for the blowfish secret
  set_fact:
    phpmyadmin_blowfish_secret: "{{ phpmyadmin_blowfish_b64encoded['content'] | b64decode | trim }}"
  tags:
    - phpmyadmin
...
