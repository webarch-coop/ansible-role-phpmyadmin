---
# https://docs.phpmyadmin.net/en/latest/setup.html#installing-from-git
- name: phpMyAdmin repo present
  git:
    repo: https://github.com/phpmyadmin/phpmyadmin.git
    dest: "{{ phpmyadmin_html }}"
    version: "{{ phpmyadmin_version }}"
    clone: true
    force: false
    verify_commit: true
    register: phpmyadmin_git
  tags:
    - phpmyadmin

- name: Chown the files
  file:
    path: "{{ phpmyadmin_html }}"
    recurse: true
    owner: "{{ phpmyadmin_user }}"
    group: "{{ phpmyadmin_user }}"
  tags:
    - phpmyadmin

- name: When the git repo has changed
  block:

    - name: composer update for phpMyAdmin
      command: composer update --no-dev
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      tags:
        - phpmyadmin

    - name: composer packages for two factor authentication present
      command: composer require pragmarx/google2fa-qrcode
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      tags:
        - phpmyadmin

    - name: yarn install for phpMyAdmin
      command: yarn install
      args:
        chdir: "{{ phpmyadmin_html }}"
      become: true
      become_user: "{{ phpmyadmin_user }}"
      tags:
        - phpmyadmin

  when: phpmyadmin_git.changed

- name: .htaccess in place
  copy:
    src: files/htaccess.root
    dest: "{{ phpmyadmin_html }}/.htaccess"
  tags:
    - phpmyadmin

- name: .htaccess in place to deny direct access to sub-directories
  copy:
    src: files/htaccess.deny
    dest: "{{ dir }}/.htaccess"
  loop:
    - "{{ phpmyadmin_html }}/doc" 
    - "{{ phpmyadmin_html }}/examples"
    - "{{ phpmyadmin_html }}/js"
    - "{{ phpmyadmin_html }}/libraries"
    - "{{ phpmyadmin_html }}/node_modules"
    - "{{ phpmyadmin_html }}/po"
    - "{{ phpmyadmin_html }}/scripts"
    - "{{ phpmyadmin_html }}/setup"
    - "{{ phpmyadmin_html }}/sql"
    - "{{ phpmyadmin_html }}/templates"
    - "{{ phpmyadmin_html }}/test"
    - "{{ phpmyadmin_html }}/themes"
    - "{{ phpmyadmin_html }}/tmp"
    - "{{ phpmyadmin_html }}/vendor"
  loop_control:
    loop_var: dir
  tags:
    - phpmyadmin

- name: Stat the blowfish secret file
  stat:
    path: "{{ phpmyadmin_private }}/blowfish_secret.inc.php"
  register: phpmyadmin_private_blowfish_secret_file
  tags:
    - phpmyadmin

- name: Generate the blowfish secret file
  block:

    - name: Generate blowfish secret for cookies
      command: pwgen -sn 32 1
      register: phpmyadmin_blowfish_gen
      tags:
        - phpmyadmin

    - name: Set a fact for the blowfish secret
      set_fact:
        phpmyadmin_blowfish_secret: "{{ phpmyadmin_blowfish_gen.stdout }}"
      tags:
        - phpmyadmin

    - name: Blowfish secret file present
      template:
        src: templates/blowfish_secret.inc.php.j2
        dest: "{{ phpmyadmin_private }}/blowfish_secret.inc.php"
      tags:
        - phpmyadmin

  when: phpmyadmin_private_blowfish_secret_file.stat.exists == False
...
