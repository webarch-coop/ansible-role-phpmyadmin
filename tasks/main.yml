---
# TODO Additional checks on variables could be added
- name: Check that required variables are defined
  assert:
    that:
      - phpmyadmin_user is defined
      - phpmyadmin_db is defined
      - phpmyadmin_db_user is defined
      - phpmyadmin_db_pass is defined
      - phpmyadmin_db_socket is defined
      - phpmyadmin_db_host is defined
      - phpmyadmin_db_port is defined
      - phpmyadmin_url is defined
      - phpmyadmin_home is defined
      - phpmyadmin_private is defined
      - phpmyadmin_tmp is defined
      - phpmyadmin_html is defined
      - phpmyadmin_html_upload_dir is defined
      - phpmyadmin_html_save_dir is defined
  tags:
    - phpmyadmin

- name: Required packages present
  apt:
    pkg:
      - aptitude
      - git
      - gnupg
      - pwgen
    state: present
  tags:
    - phpmyadmin

- name: "Check if the phpMyAdmin {{ phpmyadmin_user }} user account exists"
  shell: "id {{ phpmyadmin_user }} && echo true || echo false"
  check_mode: false
  register: phpmyadmin_user_check
  changed_when: '"no such user" in phpmyadmin_user_check.stderr'
  tags:
    - phpmyadmin

- name: Only install or upgrade phpMyAdmin if the user account exists
  block:

    - name: Required directories present
      file:
        path: "{{ phpmyadmin_home }}/{{ dir }}"
        state: directory
        owner: "{{ phpmyadmin_user }}"
        group: "{{ phpmyadmin_user }}"
        mode: 0700
      loop:
        - .ansible
        - .gnupg
      loop_control:
        loop_var: dir

    - name: Check if a Debian package is installed
      shell: "aptitude versions phpmyadmin | grep -q ^i && echo INSTALLED || echo NOTFOUND"
      check_mode: false
      register: phpmyadmin_debian_installed
      changed_when: '"INSTALLED" in phpmyadmin_debian_installed.stdout'

    - name: Upgrade from a Debian package version
      include_tasks: upgrade_from_deb.yml
      when: ( phpmyadmin_debian_installed is defined ) and ( phpmyadmin_debian_installed.stdout == "INSTALLED" )

    - name: Check for package.json
      stat:
        path: "{{ phpmyadmin_html }}/package.json"
      register: phpmyadmin_package_json

    - name: Load variables from package.json if it exists
      include_tasks: version.yml
      when: ( phpmyadmin_package_json is defined ) and ( phpmyadmin_package_json.stat.exists )

    - name: Include tasks to ensure that the required version of the phpMyAdmin source code is present
      include_tasks: phpmyadmin.yml
      when: ( not phpmyadmin_package_json.stat.exists ) or ( phpmyadmin_installed_version is defined and phpmyadmin_installed_version != phpmyadmin_version )

    - name: Check for config.inc.php
      stat:
        path: "{{ phpmyadmin_html }}/config.inc.php"
      check_mode: false
      register: phpmyadmin_config_check

    - name: Include additional install tasks
      include_tasks: install.yml
      when: ( phpmyadmin_config_check is defined ) and ( phpmyadmin_config_check.stat.exists == False )

    - name: robots.txt in place
      copy:
        src: robots.txt
        dest: "{{ phpmyadmin_html }}/robots.txt"
        owner: "{{ phpmyadmin_user }}"
        group: "{{ phpmyadmin_user }}"
        mode: "0644"

    - name: Generate the config.inc.php file
      template:
        src: templates/config.inc.php.j2
        dest: "{{ phpmyadmin_html }}/config.inc.php"

  when: '"no such user" not in phpmyadmin_user_check.stderr'
  tags:
    - phpmyadmin
...
