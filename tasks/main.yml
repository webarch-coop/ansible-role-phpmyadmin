---
- name: Install and upgrade phpMyAdmin
  block:

    - name: Required packages present
      apt:
        pkg:
          - aptitude
          - bash
          - git
          - gnupg
          - pwgen
        state: present

    - name: Run which bash
      command: which bash
      check_mode: false
      changed_when: false
      register: phpmyadmin_which_bash
      failed_when: phpmyadmin_which_bash.stdout is not regex('\/bash$')

    - name: Set a variable for the path to Bash
      set_fact:
        phpmyadmin_bash: "{{ phpmyadmin_which_bash.stdout }}"

    # TODO Omit this when everything has been updated
    - name: Include backwards compatibility tasks
      include_tasks: compat.yml

    # TODO Additional checks on variables could be added
    - name: Check that required variables are defined
      assert:
        that:
          - phpmyadmin_user is defined
          - phpmyadmin_version is defined
          - ( phpmyadmin_version == "latest" ) or ( phpmyadmin_version is regex('^[0-9][.][0-9][.][0-9]{1,2}[.]{0,1}[0-9]{0,2}$') )
          - phpmyadmin_dbname is defined
          - phpmyadmin_dbuser is defined
          - phpmyadmin_dbpass is defined
          - phpmyadmin_dbhost is defined
          - phpmyadmin_dbport is defined
          - phpmyadmin_dbsocket is defined
          - phpmyadmin_url is defined
          - phpmyadmin_home is defined
          - phpmyadmin_tmp is defined
          - phpmyadmin_private is defined
          - phpmyadmin_docroot is defined
          - phpmyadmin_lang is defined

    - name: Fail if the phpMyAdmin user account doesn't exist
      getent:
        database: passwd
        key: "{{ phpmyadmin_user }}"
        fail_key: true

    - name: Find the latest version of phpMyAdmin
      block:

        - name: Use a HEAD request to get the latest redirect URL
          ansible.builtin.uri:
            url: https://github.com/phpmyadmin/phpmyadmin/releases/latest
            method: HEAD
            status_code: 302
            follow_redirects: none
          check_mode: false
          changed_when: false
          register: phpmyadmin_latest_headers

        - name: Set a fact for the latest version of phpMyAdmin
          ansible.builtin.set_fact:
            phpmyadmin_proposed: "{{ phpmyadmin_latest_headers.location | urlsplit('path') | basename | regex_replace('^RELEASE_') | regex_replace('_', '.') | string }}"

      when: phpmyadmin_version == "latest"

    - name: Set a fact for the proposed version of phpMyAdmin when not usig the latest version
      ansible.builtin.set_fact:
        phpmyadmin_proposed: "{{ phpmyadmin_version | string }}"
      when: phpmyadmin_proposed is not defined

    - name: Check the default version of PHP available via the command line
      command: php --version
      check_mode: false
      changed_when: false
      become: true
      become_user: "{{ phpmyadmin_user }}"
      register: phpmyadmin_php_version_check

    - name: Set a fact for the version of PHP available via the command line
      set_fact:
        php_version: "{{ ( phpmyadmin_php_version_check.stdout_lines[0] ).split(' ')[1] | string }}"

    - name: Check that if we are instaling or upgrading to phpMyAdmin 5.2.0 we have php 7.2 or newer
      assert:
        that:
          - php_version | string is version('7.2', '>=')
      when: phpmyadmin_proposed | string is version('5.2.0', '>=')

    - name: Upgrade from phpMyAdmin deb on Stretch, Buster didn't ship it but Bullseye does again
      include_tasks: upgrade_from_deb.yml
      when: ansible_distribution_release == "buster"

    - name: Check for package.json
      stat:
        path: "{{ phpmyadmin_docroot }}/package.json"
      register: phpmyadmin_package_json

    - name: When phpMyAdmin is already installed upgrade if needed
      block:

        - name: Load variables from package.json if it exists
          include_tasks: version.yml

        - name: Include tasks to ensure that the required version of the phpMyAdmin source code is present
          include_tasks: phpmyadmin.yml
          when: ( phpmyadmin_installed is defined ) and ( phpmyadmin_installed is version(phpmyadmin_proposed, '<')

      when: ( phpmyadmin_package_json is defined ) and ( phpmyadmin_package_json.stat.exists )

    - name: Include tasks to ensure that the required version of the phpMyAdmin source code is present
      include_tasks: phpmyadmin.yml
      when: ( phpmyadmin_package_json is not defined ) or ( not phpmyadmin_package_json.stat.exists )

  tags:
    - phpmyadmin
...
